<div class="modal fade" id="{{ tag }}" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <a href="{{link}}" class="w-100" style="height: 30vh;" target="_blank" rel="noopener">
          <img class="lazy w-100 h-100" style="object-fit: cover;" src="" data-src="{{cover.source}}" data-srcset="{{cover.source}}"
            alt="{{name}}" />
        </a>
      </div>
      <div class="modal-body text-dark">
        <p class="h3 mb-3">
          {{ name }}
        </p>
        <p>
          {{{ date }}}
        </p>
        <p>
          {{{ htmlDescription }}}
        </p>
      </div>
      <div class="modal-footer">
        <a class="btn btn-secondary buttonlink" href="{{ link }}" target="_blank" rel="noopener">
          {{{__ "facebook_more"}}}
        </a>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">{{{__ "common_close"}}}</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let lazyImages = [].slice.call(document.querySelectorAll("img.lazy"));
    let active = false;

    if ("IntersectionObserver" in window) {
      let lazyImageObserver = new IntersectionObserver(function (entries, observer) {
        entries.forEach(function (entry) {
          if (entry.isIntersecting) {
            let lazyImage = entry.target;
            lazyImage.src = lazyImage.dataset.src;
            lazyImage.srcset = lazyImage.dataset.srcset;
            lazyImage.classList.remove("lazy");
            lazyImageObserver.unobserve(lazyImage);
          }
        });
      });

      lazyImages.forEach(function (lazyImage) {
        lazyImageObserver.observe(lazyImage);
      });
    } else {
      const lazyLoad = function () {
        if (active === false) {
          active = true;

          setTimeout(function () {
            lazyImages.forEach(function (lazyImage) {
              if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).display !== "none") {
                lazyImage.src = lazyImage.dataset.src;
                lazyImage.srcset = lazyImage.dataset.srcset;
                lazyImage.classList.remove("lazy");

                lazyImages = lazyImages.filter(function (image) {
                  return image !== lazyImage;
                });

                if (lazyImages.length === 0) {
                  window.removeEventListener("show.bs.modal", lazyLoad);
                }
              }
            });

            active = false;
          }, 200);
        }
      };

      window.addEventListener("show.bs.modal", lazyLoad);
    }
  });
</script>
